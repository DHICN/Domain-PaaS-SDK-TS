name: Publish NPM

on:
  push:
    branches: 
      - main
      - main-v3

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }} install pnpm
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install -g pnpm

      - name: use pnpm install packages
        run: pnpm install --no-frozen-lockfile

      - name: use pnpm build
        run: pnpm build

      - name: Publish to npm (main)
        if: github.ref == 'refs/heads/main'
        uses: JS-DevTools/npm-publish@v2
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public

      - name: Publish to npm (main-v3)
        if: github.ref == 'refs/heads/main-v3'
        uses: JS-DevTools/npm-publish@v2
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1

      - name: Print version
        run: echo ${{ steps.extract_version.outputs.version }}

      - name: Create a Release (main)
        if: github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag: v${{ steps.extract_version.outputs.version }}
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Create a Release (main-v3)
        if: github.ref == 'refs/heads/main-v3'
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag: v3-${{ steps.extract_version.outputs.version }}
          token: ${{ secrets.RELEASE_TOKEN }}
