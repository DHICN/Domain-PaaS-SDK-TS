/* eslint-disable */
/**
 * 污水业务中台领域服务
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios'
import { Configuration } from '../configuration'
import { URL } from '../../sdk-helper'
// Some imports not used depending on template conditions
// @ts-ignore
import {
  DUMMY_BASE_URL,
  assertParamExists,
  setApiKeyToObject,
  setBasicAuthToObject,
  setBearerAuthToObject,
  setOAuthToObject,
  setSearchParams,
  serializeDataIfNeeded,
  toPathString,
  createRequestFunction,
} from '../common'
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base'
// @ts-ignore
import { AddModelPrecisionConfigInput } from '../models'
// @ts-ignore
import { AddProNumSimLabIndexConfigInput } from '../models'
// @ts-ignore
import { AddSysStatisticConfigsInput } from '../models'
// @ts-ignore
import { GetProNumSimLabIndexConfigOutput } from '../models'
// @ts-ignore
import { HpDisplayConfigInOut } from '../models'
// @ts-ignore
import { ModelPrecisionConfigsDto } from '../models'
// @ts-ignore
import { RemoteServiceErrorResponse } from '../models'
// @ts-ignore
import { SysStatisticConfigInOut } from '../models'
// @ts-ignore
import { UpdateSysStatisticConfigsInput } from '../models'
/**
 * MainBusConfigApi - axios parameter creator
 * @export
 */
export const MainBusConfigApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     *
     * @summary 添加首页展示配置信息 Add home page display config data
     * @param {string} [tenantId]
     * @param {Array<HpDisplayConfigInOut>} [hpDisplayConfigInOut]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigAddHomePageDisplayConfigsPost: async (
      tenantId?: string,
      hpDisplayConfigInOut?: Array<HpDisplayConfigInOut>,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/AddHomePageDisplayConfigs`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        hpDisplayConfigInOut,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 添加模型精度配置 Add model precision config data
     * @param {string} [tenantId]
     * @param {Array<AddModelPrecisionConfigInput>} [addModelPrecisionConfigInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigAddModelPrecisionConfigPost: async (
      tenantId?: string,
      addModelPrecisionConfigInput?: Array<AddModelPrecisionConfigInput>,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/AddModelPrecisionConfig`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        addModelPrecisionConfigInput,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 添加工艺模拟实验室方案指标配置 Add process simulation lab indicator config data
     * @param {string} [tenantId]
     * @param {Array<AddProNumSimLabIndexConfigInput>} [addProNumSimLabIndexConfigInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigAddProNumSimLabIndexConfigPost: async (
      tenantId?: string,
      addProNumSimLabIndexConfigInput?: Array<AddProNumSimLabIndexConfigInput>,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/AddProNumSimLabIndexConfig`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        addProNumSimLabIndexConfigInput,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 添加数据看板统计配置信息 Add system statistic config data for data board
     * @param {string} [tenantId]
     * @param {Array<AddSysStatisticConfigsInput>} [addSysStatisticConfigsInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigAddSysStatisticConfigsPost: async (
      tenantId?: string,
      addSysStatisticConfigsInput?: Array<AddSysStatisticConfigsInput>,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/AddSysStatisticConfigs`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        addSysStatisticConfigsInput,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 根据ID删除首页配置信息 Delete home page display config data by ids
     * @param {string} [tenantId]
     * @param {Array<string>} [requestBody]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigDeleteHomePageDisplayConfigsPost: async (
      tenantId?: string,
      requestBody?: Array<string>,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/DeleteHomePageDisplayConfigs`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        requestBody,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 根据ID删除统计配置信息 Delete system statistic config data for data board by ids
     * @param {string} [tenantId]
     * @param {Array<string>} [requestBody]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigDeleteSysStatisticConfigsPost: async (
      tenantId?: string,
      requestBody?: Array<string>,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/DeleteSysStatisticConfigs`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        requestBody,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 获取所有首页展示指标配置信息 Get all home page display config data
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetAllHomePageDisplayConfigsGet: async (
      tenantId?: string,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/GetAllHomePageDisplayConfigs`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 获取所有系统统计配置信息 Get all system statistic config data for data board
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetAllSysStatisticConfigsGet: async (
      tenantId?: string,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/GetAllSysStatisticConfigs`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 根据展示类型枚举获取配置信息 Get home page display config data by display type
     * @param {number} [displayType] 展示的类型 display type
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetHomePageDisplayConfigByTypeGet: async (
      displayType?: number,
      tenantId?: string,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/GetHomePageDisplayConfigByType`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (displayType !== undefined) {
        localVarQueryParameter['displayType'] = displayType
      }

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 获取模型精度配置 Get model precision config data
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetModelPrecisionConfigsGet: async (
      tenantId?: string,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/GetModelPrecisionConfigs`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 获取工艺模拟实验室方案指标配置 Get process simulation lab indicator config data
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetProNumSimLabIndexConfigGet: async (
      tenantId?: string,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/GetProNumSimLabIndexConfig`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 通过统计编码获取统计配置信息 Get system statistic config data for data board by code
     * @param {string} [statisticCode] 统计编码 statistic code
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetSysStatisticConfigByStatisticCodeGet: async (
      statisticCode?: string,
      tenantId?: string,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/GetSysStatisticConfigByStatisticCode`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (statisticCode !== undefined) {
        localVarQueryParameter['statisticCode'] = statisticCode
      }

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 更新首页配置信息 Update home page display config data
     * @param {string} [tenantId]
     * @param {Array<HpDisplayConfigInOut>} [hpDisplayConfigInOut]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigUpdateHomePageDisplayConfigsPost: async (
      tenantId?: string,
      hpDisplayConfigInOut?: Array<HpDisplayConfigInOut>,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/UpdateHomePageDisplayConfigs`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        hpDisplayConfigInOut,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 修改统计配置信息 Update system statistic config data for data board
     * @param {string} [tenantId]
     * @param {Array<UpdateSysStatisticConfigsInput>} [updateSysStatisticConfigsInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigUpdateSysStatisticConfigsPost: async (
      tenantId?: string,
      updateSysStatisticConfigsInput?: Array<UpdateSysStatisticConfigsInput>,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/MainBusConfig/UpdateSysStatisticConfigs`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (tenantId != null) {
        localVarHeaderParameter['tenantId'] = String(tenantId)
      }

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        updateSysStatisticConfigsInput,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
  }
}

/**
 * MainBusConfigApi - functional programming interface
 * @export
 */
export const MainBusConfigApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = MainBusConfigApiAxiosParamCreator(configuration)
  return {
    /**
     *
     * @summary 添加首页展示配置信息 Add home page display config data
     * @param {string} [tenantId]
     * @param {Array<HpDisplayConfigInOut>} [hpDisplayConfigInOut]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigAddHomePageDisplayConfigsPost(
      tenantId?: string,
      hpDisplayConfigInOut?: Array<HpDisplayConfigInOut>,
      options?: AxiosRequestConfig,
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigAddHomePageDisplayConfigsPost(
          tenantId,
          hpDisplayConfigInOut,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 添加模型精度配置 Add model precision config data
     * @param {string} [tenantId]
     * @param {Array<AddModelPrecisionConfigInput>} [addModelPrecisionConfigInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigAddModelPrecisionConfigPost(
      tenantId?: string,
      addModelPrecisionConfigInput?: Array<AddModelPrecisionConfigInput>,
      options?: AxiosRequestConfig,
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigAddModelPrecisionConfigPost(
          tenantId,
          addModelPrecisionConfigInput,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 添加工艺模拟实验室方案指标配置 Add process simulation lab indicator config data
     * @param {string} [tenantId]
     * @param {Array<AddProNumSimLabIndexConfigInput>} [addProNumSimLabIndexConfigInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigAddProNumSimLabIndexConfigPost(
      tenantId?: string,
      addProNumSimLabIndexConfigInput?: Array<AddProNumSimLabIndexConfigInput>,
      options?: AxiosRequestConfig,
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigAddProNumSimLabIndexConfigPost(
          tenantId,
          addProNumSimLabIndexConfigInput,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 添加数据看板统计配置信息 Add system statistic config data for data board
     * @param {string} [tenantId]
     * @param {Array<AddSysStatisticConfigsInput>} [addSysStatisticConfigsInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigAddSysStatisticConfigsPost(
      tenantId?: string,
      addSysStatisticConfigsInput?: Array<AddSysStatisticConfigsInput>,
      options?: AxiosRequestConfig,
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigAddSysStatisticConfigsPost(
          tenantId,
          addSysStatisticConfigsInput,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 根据ID删除首页配置信息 Delete home page display config data by ids
     * @param {string} [tenantId]
     * @param {Array<string>} [requestBody]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigDeleteHomePageDisplayConfigsPost(
      tenantId?: string,
      requestBody?: Array<string>,
      options?: AxiosRequestConfig,
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigDeleteHomePageDisplayConfigsPost(
          tenantId,
          requestBody,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 根据ID删除统计配置信息 Delete system statistic config data for data board by ids
     * @param {string} [tenantId]
     * @param {Array<string>} [requestBody]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigDeleteSysStatisticConfigsPost(
      tenantId?: string,
      requestBody?: Array<string>,
      options?: AxiosRequestConfig,
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigDeleteSysStatisticConfigsPost(
          tenantId,
          requestBody,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 获取所有首页展示指标配置信息 Get all home page display config data
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigGetAllHomePageDisplayConfigsGet(
      tenantId?: string,
      options?: AxiosRequestConfig,
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<HpDisplayConfigInOut>>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigGetAllHomePageDisplayConfigsGet(
          tenantId,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 获取所有系统统计配置信息 Get all system statistic config data for data board
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigGetAllSysStatisticConfigsGet(
      tenantId?: string,
      options?: AxiosRequestConfig,
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SysStatisticConfigInOut>>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigGetAllSysStatisticConfigsGet(
          tenantId,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 根据展示类型枚举获取配置信息 Get home page display config data by display type
     * @param {number} [displayType] 展示的类型 display type
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigGetHomePageDisplayConfigByTypeGet(
      displayType?: number,
      tenantId?: string,
      options?: AxiosRequestConfig,
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<HpDisplayConfigInOut>>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigGetHomePageDisplayConfigByTypeGet(
          displayType,
          tenantId,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 获取模型精度配置 Get model precision config data
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigGetModelPrecisionConfigsGet(
      tenantId?: string,
      options?: AxiosRequestConfig,
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelPrecisionConfigsDto>>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigGetModelPrecisionConfigsGet(
          tenantId,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 获取工艺模拟实验室方案指标配置 Get process simulation lab indicator config data
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigGetProNumSimLabIndexConfigGet(
      tenantId?: string,
      options?: AxiosRequestConfig,
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string,
      ) => AxiosPromise<Array<GetProNumSimLabIndexConfigOutput>>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigGetProNumSimLabIndexConfigGet(
          tenantId,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 通过统计编码获取统计配置信息 Get system statistic config data for data board by code
     * @param {string} [statisticCode] 统计编码 statistic code
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigGetSysStatisticConfigByStatisticCodeGet(
      statisticCode?: string,
      tenantId?: string,
      options?: AxiosRequestConfig,
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SysStatisticConfigInOut>>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigGetSysStatisticConfigByStatisticCodeGet(
          statisticCode,
          tenantId,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 更新首页配置信息 Update home page display config data
     * @param {string} [tenantId]
     * @param {Array<HpDisplayConfigInOut>} [hpDisplayConfigInOut]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigUpdateHomePageDisplayConfigsPost(
      tenantId?: string,
      hpDisplayConfigInOut?: Array<HpDisplayConfigInOut>,
      options?: AxiosRequestConfig,
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigUpdateHomePageDisplayConfigsPost(
          tenantId,
          hpDisplayConfigInOut,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     *
     * @summary 修改统计配置信息 Update system statistic config data for data board
     * @param {string} [tenantId]
     * @param {Array<UpdateSysStatisticConfigsInput>} [updateSysStatisticConfigsInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainBusConfigUpdateSysStatisticConfigsPost(
      tenantId?: string,
      updateSysStatisticConfigsInput?: Array<UpdateSysStatisticConfigsInput>,
      options?: AxiosRequestConfig,
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainBusConfigUpdateSysStatisticConfigsPost(
          tenantId,
          updateSysStatisticConfigsInput,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
  }
}

/**
 * MainBusConfigApi - factory interface
 * @export
 */
export const MainBusConfigApiFactory = function (
  configuration?: Configuration,
  basePath?: string,
  axios?: AxiosInstance,
) {
  const localVarFp = MainBusConfigApiFp(configuration)
  return {
    /**
     *
     * @summary 添加首页展示配置信息 Add home page display config data
     * @param {string} [tenantId]
     * @param {Array<HpDisplayConfigInOut>} [hpDisplayConfigInOut]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigAddHomePageDisplayConfigsPost(
      tenantId?: string,
      hpDisplayConfigInOut?: Array<HpDisplayConfigInOut>,
      options?: any,
    ): AxiosPromise<object> {
      return localVarFp
        .apiMainBusConfigAddHomePageDisplayConfigsPost(tenantId, hpDisplayConfigInOut, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 添加模型精度配置 Add model precision config data
     * @param {string} [tenantId]
     * @param {Array<AddModelPrecisionConfigInput>} [addModelPrecisionConfigInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigAddModelPrecisionConfigPost(
      tenantId?: string,
      addModelPrecisionConfigInput?: Array<AddModelPrecisionConfigInput>,
      options?: any,
    ): AxiosPromise<object> {
      return localVarFp
        .apiMainBusConfigAddModelPrecisionConfigPost(
          tenantId,
          addModelPrecisionConfigInput,
          options,
        )
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 添加工艺模拟实验室方案指标配置 Add process simulation lab indicator config data
     * @param {string} [tenantId]
     * @param {Array<AddProNumSimLabIndexConfigInput>} [addProNumSimLabIndexConfigInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigAddProNumSimLabIndexConfigPost(
      tenantId?: string,
      addProNumSimLabIndexConfigInput?: Array<AddProNumSimLabIndexConfigInput>,
      options?: any,
    ): AxiosPromise<object> {
      return localVarFp
        .apiMainBusConfigAddProNumSimLabIndexConfigPost(
          tenantId,
          addProNumSimLabIndexConfigInput,
          options,
        )
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 添加数据看板统计配置信息 Add system statistic config data for data board
     * @param {string} [tenantId]
     * @param {Array<AddSysStatisticConfigsInput>} [addSysStatisticConfigsInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigAddSysStatisticConfigsPost(
      tenantId?: string,
      addSysStatisticConfigsInput?: Array<AddSysStatisticConfigsInput>,
      options?: any,
    ): AxiosPromise<object> {
      return localVarFp
        .apiMainBusConfigAddSysStatisticConfigsPost(tenantId, addSysStatisticConfigsInput, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 根据ID删除首页配置信息 Delete home page display config data by ids
     * @param {string} [tenantId]
     * @param {Array<string>} [requestBody]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigDeleteHomePageDisplayConfigsPost(
      tenantId?: string,
      requestBody?: Array<string>,
      options?: any,
    ): AxiosPromise<object> {
      return localVarFp
        .apiMainBusConfigDeleteHomePageDisplayConfigsPost(tenantId, requestBody, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 根据ID删除统计配置信息 Delete system statistic config data for data board by ids
     * @param {string} [tenantId]
     * @param {Array<string>} [requestBody]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigDeleteSysStatisticConfigsPost(
      tenantId?: string,
      requestBody?: Array<string>,
      options?: any,
    ): AxiosPromise<object> {
      return localVarFp
        .apiMainBusConfigDeleteSysStatisticConfigsPost(tenantId, requestBody, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 获取所有首页展示指标配置信息 Get all home page display config data
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetAllHomePageDisplayConfigsGet(
      tenantId?: string,
      options?: any,
    ): AxiosPromise<Array<HpDisplayConfigInOut>> {
      return localVarFp
        .apiMainBusConfigGetAllHomePageDisplayConfigsGet(tenantId, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 获取所有系统统计配置信息 Get all system statistic config data for data board
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetAllSysStatisticConfigsGet(
      tenantId?: string,
      options?: any,
    ): AxiosPromise<Array<SysStatisticConfigInOut>> {
      return localVarFp
        .apiMainBusConfigGetAllSysStatisticConfigsGet(tenantId, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 根据展示类型枚举获取配置信息 Get home page display config data by display type
     * @param {number} [displayType] 展示的类型 display type
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetHomePageDisplayConfigByTypeGet(
      displayType?: number,
      tenantId?: string,
      options?: any,
    ): AxiosPromise<Array<HpDisplayConfigInOut>> {
      return localVarFp
        .apiMainBusConfigGetHomePageDisplayConfigByTypeGet(displayType, tenantId, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 获取模型精度配置 Get model precision config data
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetModelPrecisionConfigsGet(
      tenantId?: string,
      options?: any,
    ): AxiosPromise<Array<ModelPrecisionConfigsDto>> {
      return localVarFp
        .apiMainBusConfigGetModelPrecisionConfigsGet(tenantId, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 获取工艺模拟实验室方案指标配置 Get process simulation lab indicator config data
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetProNumSimLabIndexConfigGet(
      tenantId?: string,
      options?: any,
    ): AxiosPromise<Array<GetProNumSimLabIndexConfigOutput>> {
      return localVarFp
        .apiMainBusConfigGetProNumSimLabIndexConfigGet(tenantId, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 通过统计编码获取统计配置信息 Get system statistic config data for data board by code
     * @param {string} [statisticCode] 统计编码 statistic code
     * @param {string} [tenantId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigGetSysStatisticConfigByStatisticCodeGet(
      statisticCode?: string,
      tenantId?: string,
      options?: any,
    ): AxiosPromise<Array<SysStatisticConfigInOut>> {
      return localVarFp
        .apiMainBusConfigGetSysStatisticConfigByStatisticCodeGet(statisticCode, tenantId, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 更新首页配置信息 Update home page display config data
     * @param {string} [tenantId]
     * @param {Array<HpDisplayConfigInOut>} [hpDisplayConfigInOut]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigUpdateHomePageDisplayConfigsPost(
      tenantId?: string,
      hpDisplayConfigInOut?: Array<HpDisplayConfigInOut>,
      options?: any,
    ): AxiosPromise<object> {
      return localVarFp
        .apiMainBusConfigUpdateHomePageDisplayConfigsPost(tenantId, hpDisplayConfigInOut, options)
        .then((request) => request(axios, basePath))
    },
    /**
     *
     * @summary 修改统计配置信息 Update system statistic config data for data board
     * @param {string} [tenantId]
     * @param {Array<UpdateSysStatisticConfigsInput>} [updateSysStatisticConfigsInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainBusConfigUpdateSysStatisticConfigsPost(
      tenantId?: string,
      updateSysStatisticConfigsInput?: Array<UpdateSysStatisticConfigsInput>,
      options?: any,
    ): AxiosPromise<object> {
      return localVarFp
        .apiMainBusConfigUpdateSysStatisticConfigsPost(
          tenantId,
          updateSysStatisticConfigsInput,
          options,
        )
        .then((request) => request(axios, basePath))
    },
  }
}

/**
 * MainBusConfigApi - object-oriented interface
 * @export
 * @class MainBusConfigApi
 * @extends {BaseAPI}
 */
export class MainBusConfigApi extends BaseAPI {
  /**
   *
   * @summary 添加首页展示配置信息 Add home page display config data
   * @param {string} [tenantId]
   * @param {Array<HpDisplayConfigInOut>} [hpDisplayConfigInOut]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigAddHomePageDisplayConfigsPost(
    tenantId?: string,
    hpDisplayConfigInOut?: Array<HpDisplayConfigInOut>,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigAddHomePageDisplayConfigsPost(tenantId, hpDisplayConfigInOut, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 添加模型精度配置 Add model precision config data
   * @param {string} [tenantId]
   * @param {Array<AddModelPrecisionConfigInput>} [addModelPrecisionConfigInput]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigAddModelPrecisionConfigPost(
    tenantId?: string,
    addModelPrecisionConfigInput?: Array<AddModelPrecisionConfigInput>,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigAddModelPrecisionConfigPost(tenantId, addModelPrecisionConfigInput, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 添加工艺模拟实验室方案指标配置 Add process simulation lab indicator config data
   * @param {string} [tenantId]
   * @param {Array<AddProNumSimLabIndexConfigInput>} [addProNumSimLabIndexConfigInput]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigAddProNumSimLabIndexConfigPost(
    tenantId?: string,
    addProNumSimLabIndexConfigInput?: Array<AddProNumSimLabIndexConfigInput>,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigAddProNumSimLabIndexConfigPost(
        tenantId,
        addProNumSimLabIndexConfigInput,
        options,
      )
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 添加数据看板统计配置信息 Add system statistic config data for data board
   * @param {string} [tenantId]
   * @param {Array<AddSysStatisticConfigsInput>} [addSysStatisticConfigsInput]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigAddSysStatisticConfigsPost(
    tenantId?: string,
    addSysStatisticConfigsInput?: Array<AddSysStatisticConfigsInput>,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigAddSysStatisticConfigsPost(tenantId, addSysStatisticConfigsInput, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 根据ID删除首页配置信息 Delete home page display config data by ids
   * @param {string} [tenantId]
   * @param {Array<string>} [requestBody]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigDeleteHomePageDisplayConfigsPost(
    tenantId?: string,
    requestBody?: Array<string>,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigDeleteHomePageDisplayConfigsPost(tenantId, requestBody, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 根据ID删除统计配置信息 Delete system statistic config data for data board by ids
   * @param {string} [tenantId]
   * @param {Array<string>} [requestBody]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigDeleteSysStatisticConfigsPost(
    tenantId?: string,
    requestBody?: Array<string>,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigDeleteSysStatisticConfigsPost(tenantId, requestBody, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 获取所有首页展示指标配置信息 Get all home page display config data
   * @param {string} [tenantId]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigGetAllHomePageDisplayConfigsGet(
    tenantId?: string,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigGetAllHomePageDisplayConfigsGet(tenantId, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 获取所有系统统计配置信息 Get all system statistic config data for data board
   * @param {string} [tenantId]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigGetAllSysStatisticConfigsGet(
    tenantId?: string,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigGetAllSysStatisticConfigsGet(tenantId, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 根据展示类型枚举获取配置信息 Get home page display config data by display type
   * @param {number} [displayType] 展示的类型 display type
   * @param {string} [tenantId]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigGetHomePageDisplayConfigByTypeGet(
    displayType?: number,
    tenantId?: string,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigGetHomePageDisplayConfigByTypeGet(displayType, tenantId, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 获取模型精度配置 Get model precision config data
   * @param {string} [tenantId]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigGetModelPrecisionConfigsGet(
    tenantId?: string,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigGetModelPrecisionConfigsGet(tenantId, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 获取工艺模拟实验室方案指标配置 Get process simulation lab indicator config data
   * @param {string} [tenantId]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigGetProNumSimLabIndexConfigGet(
    tenantId?: string,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigGetProNumSimLabIndexConfigGet(tenantId, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 通过统计编码获取统计配置信息 Get system statistic config data for data board by code
   * @param {string} [statisticCode] 统计编码 statistic code
   * @param {string} [tenantId]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigGetSysStatisticConfigByStatisticCodeGet(
    statisticCode?: string,
    tenantId?: string,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigGetSysStatisticConfigByStatisticCodeGet(statisticCode, tenantId, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 更新首页配置信息 Update home page display config data
   * @param {string} [tenantId]
   * @param {Array<HpDisplayConfigInOut>} [hpDisplayConfigInOut]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigUpdateHomePageDisplayConfigsPost(
    tenantId?: string,
    hpDisplayConfigInOut?: Array<HpDisplayConfigInOut>,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigUpdateHomePageDisplayConfigsPost(tenantId, hpDisplayConfigInOut, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 修改统计配置信息 Update system statistic config data for data board
   * @param {string} [tenantId]
   * @param {Array<UpdateSysStatisticConfigsInput>} [updateSysStatisticConfigsInput]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainBusConfigApi
   */
  public apiMainBusConfigUpdateSysStatisticConfigsPost(
    tenantId?: string,
    updateSysStatisticConfigsInput?: Array<UpdateSysStatisticConfigsInput>,
    options?: AxiosRequestConfig,
  ) {
    return MainBusConfigApiFp(this.configuration)
      .apiMainBusConfigUpdateSysStatisticConfigsPost(
        tenantId,
        updateSysStatisticConfigsInput,
        options,
      )
      .then((request) => request(this.axios, this.basePath))
  }
}
