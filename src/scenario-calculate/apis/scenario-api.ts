/* eslint-disable */
/**
 * 方案计算服务
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios'
import { Configuration } from '../configuration'
import { URL } from '../../sdk-helper'
// Some imports not used depending on template conditions
// @ts-ignore
import {
  DUMMY_BASE_URL,
  assertParamExists,
  setApiKeyToObject,
  setBasicAuthToObject,
  setBearerAuthToObject,
  setOAuthToObject,
  setSearchParams,
  serializeDataIfNeeded,
  toPathString,
  createRequestFunction,
} from '../common'
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base'
// @ts-ignore
import { DhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput } from '../models'
// @ts-ignore
import { DhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput } from '../models'
// @ts-ignore
import { DhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput } from '../models'
// @ts-ignore
import { DhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput } from '../models'
// @ts-ignore
import { DhiDssScenarioComputeScenarioDtosScenarioInfo } from '../models'
/**
 * ScenarioApi - axios parameter creator
 * @export
 */
export const ScenarioApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * 关键词：      水环境、突发水污染事故    使用场景：      此接口用于创建水环境突发水污染事故方案，一般直接基于相应方案库所配置的模板方案来创建。除了创建方案之外，也会准备模型计算所需要的边界数据等入库保存，边界数据来源优先选择实测数据。      在创建事故方案之前，用户往往会先通过系统界面对事故的详细信息进行设置，如事故的发生地点、排放流量、排放时长、污染物类型、污染物浓度等，结合事故管理服务对事故信息进行保存。在此接口创建方案时，会将事故信息与方案进行绑定。在方案计算时会将相应的事故信息保存至模型。相关接口如下：      事故管理服务的/api/v1/accident/accident/add-accident接口用于添加事故详细信息；      事故管理服务的/api/v1/accident/accident/detail接口用于查询事故详细信息；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      突发水污染事故方案，用于对河道上突然发生的水污染事故，如污染物泄露、偷排偷放等情况进行模拟，通常假定在事故发生前，涉及到的污染物质在河道上并不存在，通过突发水污染事故方案可以模拟进入河道的污染物在河道上的运移情况，浓度分布等，从而辅助判断事故的影响范围和程度。    输入：      输入主要包括事故方案的名称、开始时间、结束时间，对应事故情景的ID等。    输出：      如果创建成功，将返回所创建突发水污染事故方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建水环境突发水污染事故方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqAccidentCreatePost: async (
      dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/v1/scenario-compute/wq/accident/create`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     * 关键词：      水环境、自动预报        使用场景：      此接口用于构建水环境自动预报方案，除了创建方案之外，也会准备模型计算所需要的初始场数据、边界数据等，其中初始场数据根据项目的实际情况，既可以选择热启动文件，也可以选择实测数据作为局部初始场数据；边界数据来源优先选择实测数据。完成各类数据的构建之后将其入库保存，以便于后续计算的时候从数据库获取相应的数据并写入模型。      该接口通常由定时任务调度进行调用，用户不需要直接调用该接口，在该接口完成自动预报方案的创建之后，通常将调用ModelDriver计算服务的/ModelRun/RunModel接口来执行该方案的计算。        相关背景：      自动预报，即以一定规则在后台自动执行的预报，不需要人为干预。自动预报的模式有两种，一种是以一定的周期定时滚动执行预报，例如每天执行一次预报，每小时执行一次预报等；另一种是以条件进行触发的预报，例如当降雨达到一定条件的时候触发执行滚动预报，当降雨小于某个阈值的时候再停止执行滚动预报。一般情况下，水环境自动预报采用第一种。    输入：      输入初始条件类型，接口会根据初始条件类型自动设置初始场数据。    输出：      如果创建成功，将返回所创建自动预报方案的具体信息，包括方案ID，方案名称、开始时间、结束时间、预报时刻等。
     * @summary 创建水环境自动预报的方案
     * @param {string} [initialConditionType] 初始条件类型，枚举，目前已存在0-2种定义，包括0：不设置初始场；1：热启动初始场；2：局部值初始场
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqAutoForecastCreatePost: async (
      initialConditionType?: string,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/v1/scenario-compute/wq/auto-forecast/create`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      if (initialConditionType !== undefined) {
        localVarQueryParameter['initialConditionType'] = initialConditionType
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     * 关键词：      水环境、突发水污染事故、措施    使用场景：      此接口用于创建针对水环境突发水污染事故的措施方案，措施方案只能基于事故方案来创建。除了创建方案之外，此接口也会准备模型计算所需要的边界数据等，这些数据默认和基础的事故方案保持一致，直接拷贝入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对调度措施进行编辑，通常是闸、泵等结构物的调度，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型，除此之外，基础事故方案的事故信息也会在措施方案计算时被写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      突发水污染事故方案，用于对河道上突然发生的水污染事故，如污染物泄露、偷排偷放等情况进行模拟，通常假定在事故发生前，涉及到的污染物质在河道上并不存在，通过突发水污染事故方案可以模拟进入河道的污染物在河道上的运移情况，浓度分布等，从而辅助判断事故的影响范围和程度。      措施方案，是针对突发水污染事故，所采取的调度措施的模拟方案。用户可以基于某一个事故方案来创建措施方案，并在此基础之上，进一步修改其泵、闸等结构物的调度数据，通过模拟来辅助判断有效的调度措施。    输入：      输入主要包括措施方案的名称、描述信息，以及对应事故方案的ID等。    输出：      如果创建成功，将返回所创建突发水污染事故措施方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建突发水污染事故措施方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqResponseCreatePost: async (
      dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/v1/scenario-compute/wq/response/create`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     * 关键词：      水环境、情景模拟    使用场景：      此接口用于创建水环境情景模拟方案，一般直接基于方案库所配置的模板方案来创建。除了创建方案之外，也会准备模型计算所需要的初始场数据、边界数据等，其中初始场数据根据项目的实际情况，既可以选择热启动文件，也可以选择实测数据作为局部初始场数据；边界数据来源优先选择实测数据。完成各类数据的构建之后将其入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对默认设置的初始场数据、边界数据等进行编辑和修正，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/initial-condition/hotstart/update接口用于设置热启动初始场数据；      模型信息服务的/api/v1/model-information/initial-condition/local-values/update接口用于设置局部初始场数据；      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      情景模拟方案，用于对一些特定的水环境情形进行模拟分析，可以是某一个历史的场景、也可以是用户虚拟的场景。基于情景模拟方案，用户可以灵活设置方案的时间范围、修改方案的初始场数据、各类边界数据等，通过模拟结果支持对水环境情景的具体分析。    输入：      输入主要包括情景模拟方案的名称、描述、开始时间、结束时间，初始场类型等。    输出：      如果创建成功，将返回所创建情景模拟方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建水环境情景模拟方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqScenarioCreatePost: async (
      dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/v1/scenario-compute/wq/scenario/create`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     * 关键词：      水环境、调度    使用场景：      此接口用于创建水环境优化调度方案，一般会基于某一个水环境自动预报方案来创建，即在自动预报方案的基础之上，做一些调度设置，对调度的效果进行模拟。除了创建方案之外，此接口也会准备模型计算所需要的初始场数据、边界数据（包括闸泵调度数据）等，这些数据默认和选择的自动预报方案一致，直接拷贝入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对默认设置的闸、泵调度数据等进行编辑，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/initial-condition/hotstart/update接口用于设置热启动初始场数据；      模型信息服务的/api/v1/model-information/initial-condition/local-values/update接口用于设置局部初始场数据；      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      调度方案，当用户发现河道的水质出现了不达标，或者有不达标的趋势时，往往需要考虑调度的措施来处理水质问题，改善水质情况，此时用户可以考虑创建调度方案来进行措施的效果模拟。用户可以基于指定时间段的水环境预报方案来创建调度方案，并在此基础之上，进一步修改其泵、闸等结构物的调度数据，通过模拟来辅助判断有效的调度措施。    输入：      输入主要包括调度方案的名称、描述、对应预报方案的ID等。方案的开始时间和结束时间，不需要输入，会自动和预报方案的时间保持一致。    输出：      如果创建成功，将返回所创建调度方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建水环境优化调度方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqScheduleCreatePost: async (
      dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput,
      options: AxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/v1/scenario-compute/wq/schedule/create`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      localVarHeaderParameter['Content-Type'] = 'application/json'

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }
      localVarRequestOptions.data = serializeDataIfNeeded(
        dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput,
        localVarRequestOptions,
        configuration,
      )

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
  }
}

/**
 * ScenarioApi - functional programming interface
 * @export
 */
export const ScenarioApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = ScenarioApiAxiosParamCreator(configuration)
  return {
    /**
     * 关键词：      水环境、突发水污染事故    使用场景：      此接口用于创建水环境突发水污染事故方案，一般直接基于相应方案库所配置的模板方案来创建。除了创建方案之外，也会准备模型计算所需要的边界数据等入库保存，边界数据来源优先选择实测数据。      在创建事故方案之前，用户往往会先通过系统界面对事故的详细信息进行设置，如事故的发生地点、排放流量、排放时长、污染物类型、污染物浓度等，结合事故管理服务对事故信息进行保存。在此接口创建方案时，会将事故信息与方案进行绑定。在方案计算时会将相应的事故信息保存至模型。相关接口如下：      事故管理服务的/api/v1/accident/accident/add-accident接口用于添加事故详细信息；      事故管理服务的/api/v1/accident/accident/detail接口用于查询事故详细信息；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      突发水污染事故方案，用于对河道上突然发生的水污染事故，如污染物泄露、偷排偷放等情况进行模拟，通常假定在事故发生前，涉及到的污染物质在河道上并不存在，通过突发水污染事故方案可以模拟进入河道的污染物在河道上的运移情况，浓度分布等，从而辅助判断事故的影响范围和程度。    输入：      输入主要包括事故方案的名称、开始时间、结束时间，对应事故情景的ID等。    输出：      如果创建成功，将返回所创建突发水污染事故方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建水环境突发水污染事故方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiV1ScenarioComputeWqAccidentCreatePost(
      dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput,
      options?: AxiosRequestConfig,
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string,
      ) => AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiV1ScenarioComputeWqAccidentCreatePost(
          dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     * 关键词：      水环境、自动预报        使用场景：      此接口用于构建水环境自动预报方案，除了创建方案之外，也会准备模型计算所需要的初始场数据、边界数据等，其中初始场数据根据项目的实际情况，既可以选择热启动文件，也可以选择实测数据作为局部初始场数据；边界数据来源优先选择实测数据。完成各类数据的构建之后将其入库保存，以便于后续计算的时候从数据库获取相应的数据并写入模型。      该接口通常由定时任务调度进行调用，用户不需要直接调用该接口，在该接口完成自动预报方案的创建之后，通常将调用ModelDriver计算服务的/ModelRun/RunModel接口来执行该方案的计算。        相关背景：      自动预报，即以一定规则在后台自动执行的预报，不需要人为干预。自动预报的模式有两种，一种是以一定的周期定时滚动执行预报，例如每天执行一次预报，每小时执行一次预报等；另一种是以条件进行触发的预报，例如当降雨达到一定条件的时候触发执行滚动预报，当降雨小于某个阈值的时候再停止执行滚动预报。一般情况下，水环境自动预报采用第一种。    输入：      输入初始条件类型，接口会根据初始条件类型自动设置初始场数据。    输出：      如果创建成功，将返回所创建自动预报方案的具体信息，包括方案ID，方案名称、开始时间、结束时间、预报时刻等。
     * @summary 创建水环境自动预报的方案
     * @param {string} [initialConditionType] 初始条件类型，枚举，目前已存在0-2种定义，包括0：不设置初始场；1：热启动初始场；2：局部值初始场
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiV1ScenarioComputeWqAutoForecastCreatePost(
      initialConditionType?: string,
      options?: AxiosRequestConfig,
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string,
      ) => AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiV1ScenarioComputeWqAutoForecastCreatePost(
          initialConditionType,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     * 关键词：      水环境、突发水污染事故、措施    使用场景：      此接口用于创建针对水环境突发水污染事故的措施方案，措施方案只能基于事故方案来创建。除了创建方案之外，此接口也会准备模型计算所需要的边界数据等，这些数据默认和基础的事故方案保持一致，直接拷贝入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对调度措施进行编辑，通常是闸、泵等结构物的调度，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型，除此之外，基础事故方案的事故信息也会在措施方案计算时被写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      突发水污染事故方案，用于对河道上突然发生的水污染事故，如污染物泄露、偷排偷放等情况进行模拟，通常假定在事故发生前，涉及到的污染物质在河道上并不存在，通过突发水污染事故方案可以模拟进入河道的污染物在河道上的运移情况，浓度分布等，从而辅助判断事故的影响范围和程度。      措施方案，是针对突发水污染事故，所采取的调度措施的模拟方案。用户可以基于某一个事故方案来创建措施方案，并在此基础之上，进一步修改其泵、闸等结构物的调度数据，通过模拟来辅助判断有效的调度措施。    输入：      输入主要包括措施方案的名称、描述信息，以及对应事故方案的ID等。    输出：      如果创建成功，将返回所创建突发水污染事故措施方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建突发水污染事故措施方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiV1ScenarioComputeWqResponseCreatePost(
      dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput,
      options?: AxiosRequestConfig,
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string,
      ) => AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiV1ScenarioComputeWqResponseCreatePost(
          dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     * 关键词：      水环境、情景模拟    使用场景：      此接口用于创建水环境情景模拟方案，一般直接基于方案库所配置的模板方案来创建。除了创建方案之外，也会准备模型计算所需要的初始场数据、边界数据等，其中初始场数据根据项目的实际情况，既可以选择热启动文件，也可以选择实测数据作为局部初始场数据；边界数据来源优先选择实测数据。完成各类数据的构建之后将其入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对默认设置的初始场数据、边界数据等进行编辑和修正，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/initial-condition/hotstart/update接口用于设置热启动初始场数据；      模型信息服务的/api/v1/model-information/initial-condition/local-values/update接口用于设置局部初始场数据；      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      情景模拟方案，用于对一些特定的水环境情形进行模拟分析，可以是某一个历史的场景、也可以是用户虚拟的场景。基于情景模拟方案，用户可以灵活设置方案的时间范围、修改方案的初始场数据、各类边界数据等，通过模拟结果支持对水环境情景的具体分析。    输入：      输入主要包括情景模拟方案的名称、描述、开始时间、结束时间，初始场类型等。    输出：      如果创建成功，将返回所创建情景模拟方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建水环境情景模拟方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiV1ScenarioComputeWqScenarioCreatePost(
      dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput,
      options?: AxiosRequestConfig,
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string,
      ) => AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiV1ScenarioComputeWqScenarioCreatePost(
          dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
    /**
     * 关键词：      水环境、调度    使用场景：      此接口用于创建水环境优化调度方案，一般会基于某一个水环境自动预报方案来创建，即在自动预报方案的基础之上，做一些调度设置，对调度的效果进行模拟。除了创建方案之外，此接口也会准备模型计算所需要的初始场数据、边界数据（包括闸泵调度数据）等，这些数据默认和选择的自动预报方案一致，直接拷贝入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对默认设置的闸、泵调度数据等进行编辑，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/initial-condition/hotstart/update接口用于设置热启动初始场数据；      模型信息服务的/api/v1/model-information/initial-condition/local-values/update接口用于设置局部初始场数据；      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      调度方案，当用户发现河道的水质出现了不达标，或者有不达标的趋势时，往往需要考虑调度的措施来处理水质问题，改善水质情况，此时用户可以考虑创建调度方案来进行措施的效果模拟。用户可以基于指定时间段的水环境预报方案来创建调度方案，并在此基础之上，进一步修改其泵、闸等结构物的调度数据，通过模拟来辅助判断有效的调度措施。    输入：      输入主要包括调度方案的名称、描述、对应预报方案的ID等。方案的开始时间和结束时间，不需要输入，会自动和预报方案的时间保持一致。    输出：      如果创建成功，将返回所创建调度方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建水环境优化调度方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiV1ScenarioComputeWqScheduleCreatePost(
      dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput,
      options?: AxiosRequestConfig,
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string,
      ) => AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiV1ScenarioComputeWqScheduleCreatePost(
          dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput,
          options,
        )
      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
    },
  }
}

/**
 * ScenarioApi - factory interface
 * @export
 */
export const ScenarioApiFactory = function (
  configuration?: Configuration,
  basePath?: string,
  axios?: AxiosInstance,
) {
  const localVarFp = ScenarioApiFp(configuration)
  return {
    /**
     * 关键词：      水环境、突发水污染事故    使用场景：      此接口用于创建水环境突发水污染事故方案，一般直接基于相应方案库所配置的模板方案来创建。除了创建方案之外，也会准备模型计算所需要的边界数据等入库保存，边界数据来源优先选择实测数据。      在创建事故方案之前，用户往往会先通过系统界面对事故的详细信息进行设置，如事故的发生地点、排放流量、排放时长、污染物类型、污染物浓度等，结合事故管理服务对事故信息进行保存。在此接口创建方案时，会将事故信息与方案进行绑定。在方案计算时会将相应的事故信息保存至模型。相关接口如下：      事故管理服务的/api/v1/accident/accident/add-accident接口用于添加事故详细信息；      事故管理服务的/api/v1/accident/accident/detail接口用于查询事故详细信息；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      突发水污染事故方案，用于对河道上突然发生的水污染事故，如污染物泄露、偷排偷放等情况进行模拟，通常假定在事故发生前，涉及到的污染物质在河道上并不存在，通过突发水污染事故方案可以模拟进入河道的污染物在河道上的运移情况，浓度分布等，从而辅助判断事故的影响范围和程度。    输入：      输入主要包括事故方案的名称、开始时间、结束时间，对应事故情景的ID等。    输出：      如果创建成功，将返回所创建突发水污染事故方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建水环境突发水污染事故方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqAccidentCreatePost(
      dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput,
      options?: any,
    ): AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo> {
      return localVarFp
        .apiV1ScenarioComputeWqAccidentCreatePost(
          dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput,
          options,
        )
        .then((request) => request(axios, basePath))
    },
    /**
     * 关键词：      水环境、自动预报        使用场景：      此接口用于构建水环境自动预报方案，除了创建方案之外，也会准备模型计算所需要的初始场数据、边界数据等，其中初始场数据根据项目的实际情况，既可以选择热启动文件，也可以选择实测数据作为局部初始场数据；边界数据来源优先选择实测数据。完成各类数据的构建之后将其入库保存，以便于后续计算的时候从数据库获取相应的数据并写入模型。      该接口通常由定时任务调度进行调用，用户不需要直接调用该接口，在该接口完成自动预报方案的创建之后，通常将调用ModelDriver计算服务的/ModelRun/RunModel接口来执行该方案的计算。        相关背景：      自动预报，即以一定规则在后台自动执行的预报，不需要人为干预。自动预报的模式有两种，一种是以一定的周期定时滚动执行预报，例如每天执行一次预报，每小时执行一次预报等；另一种是以条件进行触发的预报，例如当降雨达到一定条件的时候触发执行滚动预报，当降雨小于某个阈值的时候再停止执行滚动预报。一般情况下，水环境自动预报采用第一种。    输入：      输入初始条件类型，接口会根据初始条件类型自动设置初始场数据。    输出：      如果创建成功，将返回所创建自动预报方案的具体信息，包括方案ID，方案名称、开始时间、结束时间、预报时刻等。
     * @summary 创建水环境自动预报的方案
     * @param {string} [initialConditionType] 初始条件类型，枚举，目前已存在0-2种定义，包括0：不设置初始场；1：热启动初始场；2：局部值初始场
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqAutoForecastCreatePost(
      initialConditionType?: string,
      options?: any,
    ): AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo> {
      return localVarFp
        .apiV1ScenarioComputeWqAutoForecastCreatePost(initialConditionType, options)
        .then((request) => request(axios, basePath))
    },
    /**
     * 关键词：      水环境、突发水污染事故、措施    使用场景：      此接口用于创建针对水环境突发水污染事故的措施方案，措施方案只能基于事故方案来创建。除了创建方案之外，此接口也会准备模型计算所需要的边界数据等，这些数据默认和基础的事故方案保持一致，直接拷贝入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对调度措施进行编辑，通常是闸、泵等结构物的调度，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型，除此之外，基础事故方案的事故信息也会在措施方案计算时被写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      突发水污染事故方案，用于对河道上突然发生的水污染事故，如污染物泄露、偷排偷放等情况进行模拟，通常假定在事故发生前，涉及到的污染物质在河道上并不存在，通过突发水污染事故方案可以模拟进入河道的污染物在河道上的运移情况，浓度分布等，从而辅助判断事故的影响范围和程度。      措施方案，是针对突发水污染事故，所采取的调度措施的模拟方案。用户可以基于某一个事故方案来创建措施方案，并在此基础之上，进一步修改其泵、闸等结构物的调度数据，通过模拟来辅助判断有效的调度措施。    输入：      输入主要包括措施方案的名称、描述信息，以及对应事故方案的ID等。    输出：      如果创建成功，将返回所创建突发水污染事故措施方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建突发水污染事故措施方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqResponseCreatePost(
      dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput,
      options?: any,
    ): AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo> {
      return localVarFp
        .apiV1ScenarioComputeWqResponseCreatePost(
          dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput,
          options,
        )
        .then((request) => request(axios, basePath))
    },
    /**
     * 关键词：      水环境、情景模拟    使用场景：      此接口用于创建水环境情景模拟方案，一般直接基于方案库所配置的模板方案来创建。除了创建方案之外，也会准备模型计算所需要的初始场数据、边界数据等，其中初始场数据根据项目的实际情况，既可以选择热启动文件，也可以选择实测数据作为局部初始场数据；边界数据来源优先选择实测数据。完成各类数据的构建之后将其入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对默认设置的初始场数据、边界数据等进行编辑和修正，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/initial-condition/hotstart/update接口用于设置热启动初始场数据；      模型信息服务的/api/v1/model-information/initial-condition/local-values/update接口用于设置局部初始场数据；      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      情景模拟方案，用于对一些特定的水环境情形进行模拟分析，可以是某一个历史的场景、也可以是用户虚拟的场景。基于情景模拟方案，用户可以灵活设置方案的时间范围、修改方案的初始场数据、各类边界数据等，通过模拟结果支持对水环境情景的具体分析。    输入：      输入主要包括情景模拟方案的名称、描述、开始时间、结束时间，初始场类型等。    输出：      如果创建成功，将返回所创建情景模拟方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建水环境情景模拟方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqScenarioCreatePost(
      dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput,
      options?: any,
    ): AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo> {
      return localVarFp
        .apiV1ScenarioComputeWqScenarioCreatePost(
          dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput,
          options,
        )
        .then((request) => request(axios, basePath))
    },
    /**
     * 关键词：      水环境、调度    使用场景：      此接口用于创建水环境优化调度方案，一般会基于某一个水环境自动预报方案来创建，即在自动预报方案的基础之上，做一些调度设置，对调度的效果进行模拟。除了创建方案之外，此接口也会准备模型计算所需要的初始场数据、边界数据（包括闸泵调度数据）等，这些数据默认和选择的自动预报方案一致，直接拷贝入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对默认设置的闸、泵调度数据等进行编辑，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/initial-condition/hotstart/update接口用于设置热启动初始场数据；      模型信息服务的/api/v1/model-information/initial-condition/local-values/update接口用于设置局部初始场数据；      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      调度方案，当用户发现河道的水质出现了不达标，或者有不达标的趋势时，往往需要考虑调度的措施来处理水质问题，改善水质情况，此时用户可以考虑创建调度方案来进行措施的效果模拟。用户可以基于指定时间段的水环境预报方案来创建调度方案，并在此基础之上，进一步修改其泵、闸等结构物的调度数据，通过模拟来辅助判断有效的调度措施。    输入：      输入主要包括调度方案的名称、描述、对应预报方案的ID等。方案的开始时间和结束时间，不需要输入，会自动和预报方案的时间保持一致。    输出：      如果创建成功，将返回所创建调度方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
     * @summary 创建水环境优化调度方案
     * @param {DhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ScenarioComputeWqScheduleCreatePost(
      dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput,
      options?: any,
    ): AxiosPromise<DhiDssScenarioComputeScenarioDtosScenarioInfo> {
      return localVarFp
        .apiV1ScenarioComputeWqScheduleCreatePost(
          dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput,
          options,
        )
        .then((request) => request(axios, basePath))
    },
  }
}

/**
 * ScenarioApi - object-oriented interface
 * @export
 * @class ScenarioApi
 * @extends {BaseAPI}
 */
export class ScenarioApi extends BaseAPI {
  /**
   * 关键词：      水环境、突发水污染事故    使用场景：      此接口用于创建水环境突发水污染事故方案，一般直接基于相应方案库所配置的模板方案来创建。除了创建方案之外，也会准备模型计算所需要的边界数据等入库保存，边界数据来源优先选择实测数据。      在创建事故方案之前，用户往往会先通过系统界面对事故的详细信息进行设置，如事故的发生地点、排放流量、排放时长、污染物类型、污染物浓度等，结合事故管理服务对事故信息进行保存。在此接口创建方案时，会将事故信息与方案进行绑定。在方案计算时会将相应的事故信息保存至模型。相关接口如下：      事故管理服务的/api/v1/accident/accident/add-accident接口用于添加事故详细信息；      事故管理服务的/api/v1/accident/accident/detail接口用于查询事故详细信息；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      突发水污染事故方案，用于对河道上突然发生的水污染事故，如污染物泄露、偷排偷放等情况进行模拟，通常假定在事故发生前，涉及到的污染物质在河道上并不存在，通过突发水污染事故方案可以模拟进入河道的污染物在河道上的运移情况，浓度分布等，从而辅助判断事故的影响范围和程度。    输入：      输入主要包括事故方案的名称、开始时间、结束时间，对应事故情景的ID等。    输出：      如果创建成功，将返回所创建突发水污染事故方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
   * @summary 创建水环境突发水污染事故方案
   * @param {DhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ScenarioApi
   */
  public apiV1ScenarioComputeWqAccidentCreatePost(
    dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput,
    options?: AxiosRequestConfig,
  ) {
    return ScenarioApiFp(this.configuration)
      .apiV1ScenarioComputeWqAccidentCreatePost(
        dhiDssScenarioComputeScenarioDtosCreateWqAccidentScenarioInput,
        options,
      )
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   * 关键词：      水环境、自动预报        使用场景：      此接口用于构建水环境自动预报方案，除了创建方案之外，也会准备模型计算所需要的初始场数据、边界数据等，其中初始场数据根据项目的实际情况，既可以选择热启动文件，也可以选择实测数据作为局部初始场数据；边界数据来源优先选择实测数据。完成各类数据的构建之后将其入库保存，以便于后续计算的时候从数据库获取相应的数据并写入模型。      该接口通常由定时任务调度进行调用，用户不需要直接调用该接口，在该接口完成自动预报方案的创建之后，通常将调用ModelDriver计算服务的/ModelRun/RunModel接口来执行该方案的计算。        相关背景：      自动预报，即以一定规则在后台自动执行的预报，不需要人为干预。自动预报的模式有两种，一种是以一定的周期定时滚动执行预报，例如每天执行一次预报，每小时执行一次预报等；另一种是以条件进行触发的预报，例如当降雨达到一定条件的时候触发执行滚动预报，当降雨小于某个阈值的时候再停止执行滚动预报。一般情况下，水环境自动预报采用第一种。    输入：      输入初始条件类型，接口会根据初始条件类型自动设置初始场数据。    输出：      如果创建成功，将返回所创建自动预报方案的具体信息，包括方案ID，方案名称、开始时间、结束时间、预报时刻等。
   * @summary 创建水环境自动预报的方案
   * @param {string} [initialConditionType] 初始条件类型，枚举，目前已存在0-2种定义，包括0：不设置初始场；1：热启动初始场；2：局部值初始场
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ScenarioApi
   */
  public apiV1ScenarioComputeWqAutoForecastCreatePost(
    initialConditionType?: string,
    options?: AxiosRequestConfig,
  ) {
    return ScenarioApiFp(this.configuration)
      .apiV1ScenarioComputeWqAutoForecastCreatePost(initialConditionType, options)
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   * 关键词：      水环境、突发水污染事故、措施    使用场景：      此接口用于创建针对水环境突发水污染事故的措施方案，措施方案只能基于事故方案来创建。除了创建方案之外，此接口也会准备模型计算所需要的边界数据等，这些数据默认和基础的事故方案保持一致，直接拷贝入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对调度措施进行编辑，通常是闸、泵等结构物的调度，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型，除此之外，基础事故方案的事故信息也会在措施方案计算时被写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      突发水污染事故方案，用于对河道上突然发生的水污染事故，如污染物泄露、偷排偷放等情况进行模拟，通常假定在事故发生前，涉及到的污染物质在河道上并不存在，通过突发水污染事故方案可以模拟进入河道的污染物在河道上的运移情况，浓度分布等，从而辅助判断事故的影响范围和程度。      措施方案，是针对突发水污染事故，所采取的调度措施的模拟方案。用户可以基于某一个事故方案来创建措施方案，并在此基础之上，进一步修改其泵、闸等结构物的调度数据，通过模拟来辅助判断有效的调度措施。    输入：      输入主要包括措施方案的名称、描述信息，以及对应事故方案的ID等。    输出：      如果创建成功，将返回所创建突发水污染事故措施方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
   * @summary 创建突发水污染事故措施方案
   * @param {DhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ScenarioApi
   */
  public apiV1ScenarioComputeWqResponseCreatePost(
    dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput,
    options?: AxiosRequestConfig,
  ) {
    return ScenarioApiFp(this.configuration)
      .apiV1ScenarioComputeWqResponseCreatePost(
        dhiDssScenarioComputeScenarioDtosCreateResponseScenarioInput,
        options,
      )
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   * 关键词：      水环境、情景模拟    使用场景：      此接口用于创建水环境情景模拟方案，一般直接基于方案库所配置的模板方案来创建。除了创建方案之外，也会准备模型计算所需要的初始场数据、边界数据等，其中初始场数据根据项目的实际情况，既可以选择热启动文件，也可以选择实测数据作为局部初始场数据；边界数据来源优先选择实测数据。完成各类数据的构建之后将其入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对默认设置的初始场数据、边界数据等进行编辑和修正，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/initial-condition/hotstart/update接口用于设置热启动初始场数据；      模型信息服务的/api/v1/model-information/initial-condition/local-values/update接口用于设置局部初始场数据；      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      情景模拟方案，用于对一些特定的水环境情形进行模拟分析，可以是某一个历史的场景、也可以是用户虚拟的场景。基于情景模拟方案，用户可以灵活设置方案的时间范围、修改方案的初始场数据、各类边界数据等，通过模拟结果支持对水环境情景的具体分析。    输入：      输入主要包括情景模拟方案的名称、描述、开始时间、结束时间，初始场类型等。    输出：      如果创建成功，将返回所创建情景模拟方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
   * @summary 创建水环境情景模拟方案
   * @param {DhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ScenarioApi
   */
  public apiV1ScenarioComputeWqScenarioCreatePost(
    dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput,
    options?: AxiosRequestConfig,
  ) {
    return ScenarioApiFp(this.configuration)
      .apiV1ScenarioComputeWqScenarioCreatePost(
        dhiDssScenarioComputeScenarioDtosCreateSceneScenarioInput,
        options,
      )
      .then((request) => request(this.axios, this.basePath))
  }

  /**
   * 关键词：      水环境、调度    使用场景：      此接口用于创建水环境优化调度方案，一般会基于某一个水环境自动预报方案来创建，即在自动预报方案的基础之上，做一些调度设置，对调度的效果进行模拟。除了创建方案之外，此接口也会准备模型计算所需要的初始场数据、边界数据（包括闸泵调度数据）等，这些数据默认和选择的自动预报方案一致，直接拷贝入库保存。      在完成该方案的创建之后，用户往往还需要通过系统界面对默认设置的闸、泵调度数据等进行编辑，并更新到数据库中，以便于后续计算的时候从数据库获取相应的数据并写入模型。相关接口如下：      模型信息服务的/api/v1/model-information/initial-condition/hotstart/update接口用于设置热启动初始场数据；      模型信息服务的/api/v1/model-information/initial-condition/local-values/update接口用于设置局部初始场数据；      模型信息服务的/api/v1/model-information/boundary/timeseries/update接口用于设置边界数据，包括部分闸、泵调度时间序列数据；      ModelDriver计算服务的/ModelRun/RunModel接口用于执行方案的计算。    相关背景：      调度方案，当用户发现河道的水质出现了不达标，或者有不达标的趋势时，往往需要考虑调度的措施来处理水质问题，改善水质情况，此时用户可以考虑创建调度方案来进行措施的效果模拟。用户可以基于指定时间段的水环境预报方案来创建调度方案，并在此基础之上，进一步修改其泵、闸等结构物的调度数据，通过模拟来辅助判断有效的调度措施。    输入：      输入主要包括调度方案的名称、描述、对应预报方案的ID等。方案的开始时间和结束时间，不需要输入，会自动和预报方案的时间保持一致。    输出：      如果创建成功，将返回所创建调度方案的具体信息，包括方案ID，方案名称、开始时间、结束时间等。
   * @summary 创建水环境优化调度方案
   * @param {DhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput} [dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ScenarioApi
   */
  public apiV1ScenarioComputeWqScheduleCreatePost(
    dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput?: DhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput,
    options?: AxiosRequestConfig,
  ) {
    return ScenarioApiFp(this.configuration)
      .apiV1ScenarioComputeWqScheduleCreatePost(
        dhiDssScenarioComputeScenarioDtosCreateScheduleScenarioInput,
        options,
      )
      .then((request) => request(this.axios, this.basePath))
  }
}
