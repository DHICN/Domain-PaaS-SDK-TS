/* eslint-disable */
/**
 * digital-twin-service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// May contain unused imports in some cases
// @ts-ignore
import { Coordinate } from './coordinate'
// May contain unused imports in some cases
// @ts-ignore
import { Envelope } from './envelope'
// May contain unused imports in some cases
// @ts-ignore
import { GeometryFactory } from './geometry-factory'
// May contain unused imports in some cases
// @ts-ignore
import { Null } from './null'
// May contain unused imports in some cases
// @ts-ignore
import { Point } from './point'
// May contain unused imports in some cases
// @ts-ignore
import { PrecisionModel } from './precision-model'

/**
 *
 * @export
 * @interface Geometry
 */
export interface Geometry {
  /**
   *
   * @type {GeometryFactory}
   * @memberof Geometry
   */
  factory?: GeometryFactory
  /**
   *
   * @type {Null}
   * @memberof Geometry
   */
  userData?: Null
  /**
   *
   * @type {number}
   * @memberof Geometry
   */
  srid?: number
  /**
   *
   * @type {string}
   * @memberof Geometry
   */
  geometryType?: string | null
  /**
   * 1-Point 2-LineString 3-Polygon 4-MultiPoint 5-MultiLineString 6-MultiPolygon 7-GeometryCollection 8-CircularString 9-CompoundCurve 10-CurvePolygon 11-MultiCurve 12-MultiSurface 13-Curve 14-Surface 15-PolyhedralSurface 16-TIN
   * @type {number}
   * @memberof Geometry
   */
  ogcGeometryType?: GeometryOgcGeometryTypeEnum
  /**
   *
   * @type {PrecisionModel}
   * @memberof Geometry
   */
  precisionModel?: PrecisionModel
  /**
   *
   * @type {Coordinate}
   * @memberof Geometry
   */
  coordinate?: Coordinate
  /**
   *
   * @type {Array<Coordinate>}
   * @memberof Geometry
   */
  coordinates?: Array<Coordinate> | null
  /**
   *
   * @type {number}
   * @memberof Geometry
   */
  numPoints?: number
  /**
   *
   * @type {number}
   * @memberof Geometry
   */
  numGeometries?: number
  /**
   *
   * @type {boolean}
   * @memberof Geometry
   */
  isSimple?: boolean
  /**
   *
   * @type {boolean}
   * @memberof Geometry
   */
  isValid?: boolean
  /**
   *
   * @type {boolean}
   * @memberof Geometry
   */
  isEmpty?: boolean
  /**
   *
   * @type {number}
   * @memberof Geometry
   */
  area?: number
  /**
   *
   * @type {number}
   * @memberof Geometry
   */
  length?: number
  /**
   *
   * @type {Point}
   * @memberof Geometry
   */
  centroid?: Point
  /**
   *
   * @type {Point}
   * @memberof Geometry
   */
  interiorPoint?: Point
  /**
   *
   * @type {Point}
   * @memberof Geometry
   */
  pointOnSurface?: Point
  /**
   * 0-P 0-Point 1-Curve 1-L 2-A 2-Surface 3-Collapse -3-Dontcare -2-True -1-Unknown -1-False
   * @type {number}
   * @memberof Geometry
   */
  dimension?: GeometryDimensionEnum
  /**
   *
   * @type {Geometry}
   * @memberof Geometry
   */
  boundary?: Geometry
  /**
   * 0-P 0-Point 1-Curve 1-L 2-A 2-Surface 3-Collapse -3-Dontcare -2-True -1-Unknown -1-False
   * @type {number}
   * @memberof Geometry
   */
  boundaryDimension?: GeometryBoundaryDimensionEnum
  /**
   *
   * @type {Geometry}
   * @memberof Geometry
   */
  envelope?: Geometry
  /**
   *
   * @type {Envelope}
   * @memberof Geometry
   */
  envelopeInternal?: Envelope
  /**
   *
   * @type {boolean}
   * @memberof Geometry
   */
  isRectangle?: boolean
}

export const GeometryOgcGeometryTypeEnum = {
  '1': 1 as number,
  '2': 2 as number,
  '3': 3 as number,
  '4': 4 as number,
  '5': 5 as number,
  '6': 6 as number,
  '7': 7 as number,
  '8': 8 as number,
  '9': 9 as number,
  '10': 10 as number,
  '11': 11 as number,
  '12': 12 as number,
  '13': 13 as number,
  '14': 14 as number,
  '15': 15 as number,
  '16': 16 as number,
} as const

export type GeometryOgcGeometryTypeEnum =
  (typeof GeometryOgcGeometryTypeEnum)[keyof typeof GeometryOgcGeometryTypeEnum]
export const GeometryDimensionEnum = {
  '0': 0 as number,
  '1': 1 as number,
  '2': 2 as number,
  '3': 3 as number,
  '-3': -3 as number,
  '-2': -2 as number,
  '-1': -1 as number,
} as const

export type GeometryDimensionEnum =
  (typeof GeometryDimensionEnum)[keyof typeof GeometryDimensionEnum]
export const GeometryBoundaryDimensionEnum = {
  '0': 0 as number,
  '1': 1 as number,
  '2': 2 as number,
  '3': 3 as number,
  '-3': -3 as number,
  '-2': -2 as number,
  '-1': -1 as number,
} as const

export type GeometryBoundaryDimensionEnum =
  (typeof GeometryBoundaryDimensionEnum)[keyof typeof GeometryBoundaryDimensionEnum]
